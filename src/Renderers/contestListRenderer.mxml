<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:views="views.*"
				width="100%" height="100" 
				autoDrawBackground="false" currentState="normal"
				dataChange="updateData();"
				mouseOver="if(currentState=='normal') currentState='hovering';" 
				name=" " 
				alpha.hovering="1" 
				mouseOut.hovering="currentState='normal'"
				alpha.normal="0.92"
				initialize="initializeHandler(event)"
				>

	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovering" />
		<s:State name="selected"/>
	</s:states>
	
		 		
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.components.List;
			import spark.core.ContentCache;
			
			import classes.GlobalConstants;
			
			private var adImage:String = "";
			
			[Bindable]
			private var currpos:int=0; 
			
			static private const iconCache:ContentCache = new ContentCache();
			
			private function initializeHandler(event:FlexEvent):void {
				pic.contentLoader = iconCache;
			}
			
			override public function set data(value:Object):void {	//Since no autoDrawBackground?
				if(value.description != null) 
					descriptionBox.text = value.description;
				if(value.currentPosition != null) 
					currpos = value.currentPosition;
				
				if(value.imageURL_small != null) {
					adImage = value.imageURL_small;
					pic.source=adImage; 
				}
				
				if(value.contestantID==parentApplication.myPetDAO.currentPetID) {
					mycircle.visible=true;
				}
				else
					mycircle.visible=false;
				
				if(value.voted) {
					//myvote.visible=true;
					votecircle.visible=true;
				}
				else {
					//myvote.visible=false; 
					votecircle.visible=false;
				}
			}
			
			private function updateData():void {
				if(data!=null) {
//					if(data.imageURL != null)
//						adImage = data.imageURL;
									
				}	
				
//				pic.source=adImage;
			}
			
		  
		]]>
	</fx:Script>
	
	<s:Rect id="background" left="0" right="0" bottomLeftRadiusX="0" bottomLeftRadiusY="0" width="100%"
			bottomRightRadiusX="0" bottomRightRadiusY="0" radiusX="0" radiusY="0"
			topLeftRadiusX="0" topLeftRadiusY="0" topRightRadiusX="0" topRightRadiusY="0"
			top.hovering="0" bottom.hovering="0"
			top.normal="0" bottom.normal="0"
			height="100" alpha="1"
			>
		<s:fill>
			<s:LinearGradient>
				<s:GradientEntry color="0xfff7ea" ratio="0.4"/>
				<s:GradientEntry color="0xf3ecdf" ratio="0.6"/>
				<s:GradientEntry color="0xd0c9be" ratio="0.8"/>
				<s:GradientEntry color="0xbeb8ae" ratio="0.9"/>
			</s:LinearGradient>
			<!-- <s:BitmapFill fillMode="repeat" source="@Embed('/assets/images/stripebackground.png')"/>-->
		</s:fill>
	</s:Rect>
	
	<s:Label id="descriptionBox" width="280" height="100" color="#040037"
			 fontFamily="MyriadPro" fontSize="32" fontStyle="normal" lineBreak="toFit"
			 text="{data.description}" textAlign="left" verticalAlign="top"
			 x="120" y="15"/>
	
	<!--s:Rect id="votecircle" right="120" verticalCenter="0" radiusX="20" radiusY="20" visible="false" width="30" height="30">
		<s:fill>
			<s:SolidColor color="0x000000" alpha="0.8"/>
		</s:fill>
	</s:Rect-->
	<s:CheckBox id="votecircle" right="175" verticalCenter="-30"  width="0" height="0" selected="true" visible="false" color="0x000000" mouseEnabled="false"/>
				
	<s:BitmapImage id="pic" x="0" right="0"
				   scaleMode="stretch" verticalCenter="0"
				   width="100" height="100">
		<s:mask>
			<s:Group>
				<s:Rect id="picmask" left="0" right="0" bottomLeftRadiusX="0" bottomLeftRadiusY="0" width="180"
						bottomRightRadiusX="0" bottomRightRadiusY="0" 
						topLeftRadiusX="0" topLeftRadiusY="0" topRightRadiusX="0" topRightRadiusY="0"
						top="0" bottom="0"	height="240">
					<s:fill>
						<s:SolidColor color="0x000000"/>
					</s:fill>
				</s:Rect>
			</s:Group>
		</s:mask>
	</s:BitmapImage>	
	
	<s:Label x="20" y="32" text="#{currpos}" id="position" fontFamily="MyriadPro" fontSize="55" fontWeight="bold"/>
	<!--s:Label id="myvote" visible="false" text="{parentApplication.Language.renderer_contestant_votedon}" fontWeight="bold"
			 x="130" y="80" fontFamily="MyriadPro"/-->
	<s:BitmapImage id="mycircle" x="8" y="18" smooth="true" source="@Embed('/assets/images/vote-circled.png')" width="{position.width+40}" scaleMode="stretch" height="{position.height+25}" visible="false"/>
</s:ItemRenderer>
